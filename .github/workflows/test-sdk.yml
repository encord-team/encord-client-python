name: Test SDK

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  BACKEND_REPO: cord-team/cord-backend

concurrency:
  group: cord-client-${{ github.ref }}-test
  cancel-in-progress: true

jobs:
  unit-tests:
    name: Unit Tests (Python ${{ matrix.python.major_minor }}, Pydantic ${{ matrix.pydantic.version }})
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        python:
          - { version: '3.8.18',  major_minor: '3.8', major_minor_test_report: '3_8' }
          - { version: '3.9.23',  major_minor: '3.9', major_minor_test_report: '3_9' }
          - { version: '3.10.18', major_minor: '3.10', major_minor_test_report: '3_10' }
          - { version: '3.11.13', major_minor: '3.11', major_minor_test_report: '3_11' }
          - { version: '3.12.11', major_minor: '3.12', major_minor_test_report: '3_12' }
          - { version: '3.13.5', major_minor: '3.13', major_minor_test_report: '3_13' }

        pydantic:
          - { version: '1.10.22', suffix: 'p1' }
          - { version: '2.10.6', suffix: 'p2' } # Latest Pydantic v2x that supports Python 3.8
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Run unit tests
        uses: ./.github/actions/run-unit-tests
        with:
          python-version: ${{ matrix.python.version }}
          pydantic-version: ${{ matrix.pydantic.version }}
          test-report-file: unit-test-report-python${{ matrix.python.major_minor_test_report }}_${{ matrix.pydantic.suffix }}.xml


  integration-tests:
    name: Run integration tests
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Checkout backend repo
        uses: actions/checkout@v4
        with:
          repository: ${{ env.BACKEND_REPO }}
          token: ${{ secrets.ACCESS_TOKEN }}
          path: encord-backend

      - name: Run integration tests
        uses: ./.github/actions/run-integration-tests
        with:
          private-key: ${{ secrets.SDK_TESTS_PRIVATE_KEY }}
          private-key-service-account: ${{ secrets.SDK_TESTS_PRIVATE_KEY_SERVICE_ACCOUNT }}
          private-key-non-org: ${{ secrets.SDK_TESTS_PRIVATE_KEY_NON_ORG }}
          sdk-repository-url: https://github.com/encord-team/encord-client-python@${{ github.sha }}


  send-slack-notification:
    name: Send notification
    runs-on: ubuntu-24.04
    needs: [ unit-tests, integration-tests ]
    if: always()
    env:
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get workflow status
        uses: technote-space/workflow-conclusion-action@v2

      - name: Send Slack notification
        uses: ./.github/actions/send-slack-notification
        with:
          success-parameter: ${{ env.WORKFLOW_CONCLUSION }}
          failure-channel: ${{ secrets.SLACK_FAILURE_CHANNEL_ID }}
